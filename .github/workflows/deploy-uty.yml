name: Deploy to Netlify (Undertale Yellow)
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Undertale Yellow
        run: |
          wget $(curl -s https://www.indiedb.com/downloads/start/262099 | grep 'Click to' | sed -re 's|.*<a href="(/downloads/mirror/262099/[^"]+)".*|https://www.indiedb.com\1|') -qO game.zip
          unzip -p game.zip "Undertale Yellow v1_1/data.win" > data.win
      - name: Checkout UTMT
        uses: actions/checkout@v4
        with:
          repository: UnderminersTeam/UndertaleModTool
          path: utmt
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore UTMT dependencies
        run: dotnet restore utmt/UndertaleModCli
      - name: Build UTMT CLI
        run: dotnet build utmt/UndertaleModCli --no-restore
      - name: Publish UTMT CLI
        run: dotnet publish utmt/UndertaleModCli -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=false --output utmtcli
      - name: Extract Undertale Yellow's code
        run: |
          ./utmtcli/UndertaleModCli load data.win --scripts 'utmt/UndertaleModTool/Scripts/Resource Unpackers/ExportAllCode.csx'
          mv Export_Code decompiled-undertaleyellow
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Build
        run: ./build.sh undertaleyellow
      - name: Publish
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=out --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_UTY }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
